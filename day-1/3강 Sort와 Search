
## 개념

정렬(Sort)란? : 복수의 원소로 주어진 데이터를 정해진 기준에 따라 새로 늘어놓는 작업
탐색(Search)란? : 복수의 원소로 이루어진 데이터에서 특정 원소를 찾아내는 작업

## 알고리즘 

- Sort 

Python 내장 함수 sorted()
List에서 쓸 수 있는 메서드 .sort()
lambda : L.sort(key=lambda x: x['value'])
(value 값을 기준으로 정렬)

ex : L=[3,8,2,7,6,10,9]
L.sort(): L=[2,3,6,7,8,9,10]


- Search 

1. 선형 탐색 (linear search), 또는 순차 탐색 (sequential search): 순차적으로 모든 요소들을 탐색하여 원하는 값을 찾아냄
- 시간 복잡도 ; O(N)

ex : L=[3,8,2,7,6,10,9] 에서 6 찾기
첫번째 요소부터 순차적으로 찾음 -> 5번째 만에 찾음 

2. 이진 탐색 (binary search): 탐색하려는 배열이 이미 정렬되어 있는 경우에만 적용할 수 있음
- 시간 복잡도 : O(lgN)

ex : L=[2,3,6,7,8,9,10] 에서 6 찾기
lower, upper, mid 를 설정하여 2번째 만에 찾음

## 연습 문제 
문제 설명
리스트 L 과, 그 안에서 찾으려 하는 원소 x 가 인자로 주어질 때, x 와 같은 값을 가지는 원소의 인덱스를 리턴하는 함수 solution() 을 완성하세요. 만약 리스트 L 안에 x 와 같은 값을 가지는 원소가 존재하지 않는 경우에는 -1 을 리턴합니다. 리스트 L 은 자연수 원소들로 이루어져 있으며, 크기 순으로 정렬되어 있다고 가정합니다. 또한, 동일한 원소는 두 번 이상 나타나지 않습니다.

예를 들어,
L = [2, 3, 5, 6, 9, 11, 15]
x = 6
의 인자들이 주어지면, L[3] == 6 이므로 3 을 리턴해야 합니다.

또 다른 예로,
L = [2, 5, 7, 9, 11]
x = 4
로 주어지면, 리스트 L 내에 4 의 원소가 존재하지 않으므로 -1 을 리턴해야 합니다.

이 연습문제에서는 알고리즘의 효율성도 평가합니다. 만약 순차 (선형) 탐색 알고리즘을 구현하는 경우에는 제한 시간 요구사항을 만족하지 못하여 효율성 테스트 케이스들을 통과하지 못할 수도 있습니다.

# 문제풀이 

def solution(L, x):
    answer = 0

    low=0
    high=len(L)-1
    while low<=high:
        mid=(low+high)//2
        if L[mid]==x:
            answer=mid
            break
        elif L[mid]>x:
            high=mid-1
        else:
            low=mid+1
    
    if answer==0:
        answer=-1

    
    return answer
