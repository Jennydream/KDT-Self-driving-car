1. stdio, redirection 
   -stdio : UNIX standard I/O (C언어에서부터 유래)
    stdin : standard input (0)
    stdout : standard output (1)
    stderr : standard error (2)
   
   -redirection : stdio의 방향을 바꾸는 것이므로 명령어 순서에 영향을 받지 않음
     추상화된 장치이므로 논리적으로 연결, 해제 등이 가능.
   
   -file 
     >FILE : 표준출력(stdout)을 파일로 
     >>FILE : 표준출력을 기존의 파일에 덧붙이거나 없으면 새 파일로
     <FILE : 표준입력(stdin)을 파일에서 입력
     <<<TEXT : 표준입력에 텍스트를 입력 
    
     - truncate : 테이블에서 모든 행을 삭제 하는 데이터 정의 언어
       명령어 : cat >myserved.log -> ^D ,  : >served.log,  >myservd.log (뒤에 두 명령어 많이 사용)
     
   - file descriptor 
     <&# : 표준 입력을 파일에서 (&#생략시 0을 의미)
     #> : fd #번을 파일로(# 생략시 1의미) (e.g. strace ls -al 2>ls_strace.txt [2는 stderr이므로 ls_strace에 저장])
     $> : stdout, stderr을 파일로 
     >$# : 출력을 fd #으로
     a | b :리다이렉션 파이프, a의 표준 출력은 b의 표준 입력으로 연결됨 
            |& 으로 만들면 stdout, stderr을 결합하여 보냄
    
    - pipe 
      > (cmd) : anonymous pipe로 만들어 cmd 명령에 보내여 출력, cmd 실행 결과는 임시 anonymous pipe인 /dev/fd/60으로 맵핑
      < (cmd) : cmd 명령 결과를 anonymous pipe로 보내어 읽어 들임, cmd 실행 결과는 임시 anonymous pipe인 /dev/fd/63으로 맵핑
      
    - HERE doucment : symbole name을 지정하면 symbol name이 다시 나올때까지 중간에 입력하는 모든 문자열이 표준입력으로 전달됨
      (HERE을 많이 적어서 HERE doucment)
        command <<HERE
        ... contetens
        HERE
    - noclobeer : redirection에 의한 덮어씌움 금지하기 위해 사용.
      set -o noclobber : 설정
      set +o noclobber : 해제 
      
    