1. Memory
   - Modern OS의  Memory= Virtual memory 
     하드웨어 조립 수준에서 메모리는 RAM을 의미
     Modern OS는 VM을 paging, segmentation과 같은 기법으로 구현
     -paging : Memory를 규격화된 크기로 잘라서 사용
     -segmentation : 비 규격화된 메모리(page를 가져다가 다시 자르고, 붙여서 만듬=> 여기서 fragment가 발생)
                     프로세스가 실제로 사용하는 메모리는 세그먼크가 됨
     -page vs. segment
      OS가 바라보는 메모리 규격 : Page
      Process가 바라보는 메모리 규격 : Segment
      
    - paging :Memory fragment 
      CPU:MMU(Memory Management Unit)에서 진행
      -paging fault 
       soft page fault : disk로부터 읽어들이지 않는 경우
       hard page fault : (=minor, major) disk로부터 읽어들이는 경우
     
    - dirty pages
      커널에서 write I/O의 성능을 향상시키기 위해 사용하는 메모리
      modified page가 write-back되기 전 상태 = disk 보다 memory가 더 최신 데이터인 경우 (out-of date 상태)
    
    - coherency : Cache - RAM - Dist 까지 항상 일관성이 유지 
    
    - mmap : File을 process memory area에 mapping시키는 기법 
      mmap I/O처리 기법 : kernel의 buffer(file cache)를 process memory에 mapped시킴.file cache는 page size단위. posix_madvise와 더불어 사용됨 
    
    - paging in : physical memory로 로딩 
    - paging out : physical memory로 언로딩 
    - Swap in : disk 공간에서 physical memory로 로딩 
    - Swap out: physical memory에서 disk 공간으로 이동
    
    - free memory 
      Free memory != available memory
      -free 명령을 통해 free memory 상태 확인 가능 (EL6, EL7은 다르게 출력됨)
       free는 기본적으로 kilo단위로 출력(-m, -g, -h로 출력 단위 변경 가능 )
       free 명령어에서 free영역은 부팅후 점점 줄어듬 : 파편화된 조각 , Linux OS가 최대한 메모리를 캐시, evictable 영역 있기때문에
    
    - meminfo : memory 상태에 대해 자세한 정보 알려줌 (초급자 이상 사용 cat /proc/meminfo)
      active memory(anonymous와 file-baked): LRU에 의해 최근에 사용된 페이지 
      inactive memory(anonymous와 file-baked) : active와 반대. candidates for paging out
      
      file-backed vs anonymous : anonymous가 relese cost가 더 높음 
      
      메모리가 부족할 때 메모리 release될 순서 ->  Inactive file-backed, Inactive anonymous, activefile-backed, active anonymous
     

2. Resource limit
   
   - ulimit : 사용자의 자원 제한 (멀티 유저 OS에서는 자원을 나누어 써야 함)
     - soft vs hard limit 
       sotf limit <= hard limit : hard limit 크기 안에서 soft limit를 지정 할 수 있음( root 유저 해당 안됨)
       core dump제한, CPU time 제한, fork 제한 
         
   - PAM(limits.conf) : login시에 제약 설정  (/etc/pam.d/login)
     /etc/security/limits.conf아래에 파일을 하나 생성하여 설정 

3. Kernel param
   kernel : /proc/sys/<class> (class에는 debug, dev, fs, kernel, net, surpc, user, vm 등이 있음)
   
   - sysctl : configure kernel parameters at runtime(=작동중인 시스템의 현재상황 설정 및 보여줌)
     /etc/sysctl/conf, /etc/sysctl/d/*.conf에 설정하여 재부팅시에 휘발되지 않도록 한다.
   
   - TCP buffer 
     net.core.rmem_max
     net.core.wmen_max
     수신측은 RTT에 따라, 송신측은 혼잡에 따라 크게 영향 받음 
     
     - net.ipv4.tcp_timestamps : 1(on), 0(off) 이 외의 여러 명령어 있음
    
   - kernel parameter 변경하는 2가지 방법 
     (1) sysctl로 변경  : e.g.  sysctl -w vm.dirty_background_ratio=12
     (2) /proc/sys 밑에 있는 맵 파일을 직접 변경 : e.g. vm.dirty_background_ratio (좋은 방법 아님)
   
   - swap 
     default : 30
     작으면 작을 수록 swap을 피하고 page cache쪽에서 가져오도록 함 
     0이 되면 page cache를 빼앗는 작업을 자주하여 오버헤드 발생할 수 있음. 따라서 특별한 경우가 아니면 기본값을 바꾸지 않는 것이 좋음.
     일반적으로 빠른 network 통신용 시스템에서는 10을 사용.
                                                       
4. Tuned
   
   /usr/lin/tuned/
   
   - dynamic adaptive system tuning daemon
     tuned : daemon server binary 
     tuned-adm : a command line tool, provides a sub-command
     
   -profile : display the currently active profile 
   -powersave : IoT나 관련 장치에서 주로 사용, 일반적인 서버의 경우에는 추천하지 않음 
                1G이상의 네트워크를 사용하는 경우에도 사용 하지 않는 것이 좋음.

5. Processors
   
   - CPU 
     lscpu : display information about the CPU architecture
     chcpu : configrue CPUs     
     cpupower : shows and sets processor power related values
    
   - GPU 
     nvidia-smi : nvidia graphic driver에 포함된 유틸리티
     pcp-pmda-nvidia-gpu : PCP(performance Co-Pilot)의 모듈
     python : gpustat
     
     Ubuntu packge : pcp, pcp-manager
     PMDA : nvidia -> /var/lib/pcp/pmdas/nvidia (해당 디렉터리로 이동한 뒤 ./Install을 실행하면 pcp에 추가됨)