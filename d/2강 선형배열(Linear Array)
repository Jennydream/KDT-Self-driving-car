#개념

선형 배열: 데이터들이 선 (line) 처럼 일렬로 늘어선 형태. (Array와 List)
Python에서 List는 서로 다른 종류의 데이터도 추가 가능

#함수 및 설명

A.append() : A 에 원소 추가 삽입
A.pop()    : A 에서 원소 하나 꺼내기
A.insert() : A 의 특정 위치에 원소 삽입 ex: A.insert(위치, 삽입할 값)
A.sort()   : A를 오름차순으로 정렬
A.sort(reverse=True) : A를 내림차순으로 정렬
A.remove() : A에서 특정값 삭제 ex: A.remove(10)
del()      : A에서 특정 값 삭제 

#예제
L=[20, 37, 58, 72,91]

L.append(10)
결과 : L=[20, 37, 58, 72,91, 10]

L.insert(3,65)
결과 : L=[20, 37, 58, 65, 72,91, 10]

del[L2]
결과  : L=[20,37,65,72,91,10]

#시간복잡도

append() : O(1)
sort()   : O(NlgN)
insert() : O(N)
remove() : O(N)

#연습문제

문제 설명
리스트 L 과 정수 x 가 인자로 주어질 때, 리스트 내의 올바른 위치에 x 를 삽입하여 그 결과 리스트를 반환하는 함수 solution 을 완성하세요.

인자로 주어지는 리스트 L 은 정수 원소들로 이루어져 있으며 크기에 따라 (오름차순으로) 정렬되어 있다고 가정합니다.

예를 들어, L = [20, 37, 58, 72, 91] 이고 x = 65 인 경우, 올바른 리턴 값은 [20, 37, 58, 65, 72, 91] 입니다.

힌트: 순환문을 이용하여 올바른 위치를 결정하고 insert() 메서드를 이용하여 삽입하는 것이 한 가지 방법입니다.

주의: 리스트 내에 존재하는 모든 원소들보다 작거나 모든 원소들보다 큰 정수가 주어지는 경우에 대해서도 올바르게 처리해야 합니다.

##풀이 
def solution(L, x):
    answer = []
    
    for i  in range(len(L)):
        if L[-1]<x:
            L.append(x)
            break
        if L[i]<x:
            continue
        else:
            L.insert(i,x)
            break
  
    answer=L
      
    return answer
