1. UNIX commands 
   shell script의 대부분은  명령어들을 어떻게 조합하는지가 관건. 
   몇몇 명령어는 builtin 명령어도 있으므로 차이점을 알아야 함
   
   - builtin 명령어 사용하는 이유
    내부 명령은 fork의 부담이 없다. 외부 명령은 무조건 fork-exec과정을 거치므로 overhead가 존재 
   
   - 명령어(많이 사용) 
     sort, cut, read, stat, eval, exec, let, echo, printf, data, time, rages(stdin으로부터 argv를 받아서 명령어 생성), ssh, scp, nc, curl, wget 등 있음
     
   - split : 처리할 데이터가 큰 경우 이를 자르는 용도로 사용 
     옵션 : -b(SIZE), -C <SIZE>, -l <NUMBER>
     
   - head, tail 
     head : 스트림의 첫 부분만 출력(기본 10라인) (e.g. ls -l | head -5)
     tail : 스트림의 끝 부분만 출력 (f 옵션 사용)
     
   - join : 공통키를 가지고 열단위 합치기 (e.g. join A B)
   
   - bin/sh 대신 bin/bash 사용 : bin/sh는 bash의 제한도니 호환 모드로 작동
   
   - exec : 실행, 파일 열기 
     bash로 실행하기(bash !=sh)
     
   - eval : 문자열을 명령어로 실행 
     어떤 프로그램의 실행결과로 shell의 환경 변수를 세팅해주는 프로그램이 있을 경우 eval을 사용 
     대부분 이런 프로그램은 background로 실행하는 형채를 가짐.(e.g. 보안프로그램, 코덱, 라이선스 관리자...)
     
   - printf : print formatted string (e.g. printf "%d %d \n" 070 0x1f)
     $(...)를 double quatation mark로 감싸주면 인수가 1개로 됨. 
      printf "%30s\n" $(cat /proc/loadavg)  -> printf "%30s\n" "$(cat /proc/loadavg)"
      
   - bc : calculator language 
   - wait : wait child process(multi-tasking을 위한 기능)
   - xargs : stdin으로부터 명령어 생성  (command | xargs build-cmd)
 
   
2. Transient process
   - 임시로 사용되는 1회성 서비스를 만드는 경우 
   명령어 : nohup(오래된 명령어 -> SIGHUP을 막는 다는 의미), systemd-run(nohup의 문제점을 해결)
   
   -system-run : nohup을 대체. service 혹은 scope로 실행 가능
   -systed의 기능이 resource control기능을 통합관리 함
    과거 CPU, memory등등의 자원 제한 기능을 직접 프로그래밍하던 것을 해결.

3. System stats
   -Load Average 
    시스템에 걸리는 부하의 평균 수치 (부하평균, 로드평균, 혹은 LA,loadavg로 줄여서 부름)
    LA는 1분, 5분, 15분 3가지 수치가 있음
    LA > CPU개수 인 경우 대기되는 프로세스가 있다는 의미
   
   -OS의 overhead에 영향을 주는 요소들 
    Process life-cycle에서 Running, Ready 상태가 빠르게 스위칭 되는 경우 => scheduling cost 증가
    Process life-cycle에서 Blocking시간이 긴 경우 => CPU활용 못함
    LA의 급격한 증가가 확인되면 CPU time or I/O 어느 곳에서 LA 증가를 일으키는지 확인 필요.
   
   -명령어 : uptime, top(or htop, atop), sar -q
   
   -vmstat
    시스템의 virtual memory와 CPU usage를 확인
   
   - top : Table of processes
   
      
