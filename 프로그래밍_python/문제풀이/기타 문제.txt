day-1
1. 나머지 한 점 
https://school.programmers.co.kr/courses/11102/lessons/70701

2. 운송 트럭
https://school.programmers.co.kr/courses/11102/lessons/70702

3. 카펫
https://school.programmers.co.kr/courses/11102/lessons/70717

4. 사탕담기 
https://school.programmers.co.kr/courses/11102/lessons/70722

day-2

1. 예산_소팅
https://school.programmers.co.kr/courses/11102/lessons/70731

2.기능개발
 https://school.programmers.co.kr/courses/11102/lessons/70687
 
3. 가장 큰 수
https://school.programmers.co.kr/courses/11102/lessons/70734

4. 최솟값 만들기
https://school.programmers.co.kr/courses/11102/lessons/70732

기타 모음 
1. 완주하지 못한 선수 

 - dictionary 사용 
  
https://school.programmers.co.kr/courses/11102/lessons/70674
  
                    
2. 좌석 구매 

  - #tuple로 변환
    t=[tuple(i) for i in seat]    
   #튜플로 바꾼 값으로 set으로 하여 중복 제거 후 길이 반환
   answer=len(set(t))
   
   https://school.programmers.co.kr/courses/11102/lessons/70713

3. 대중소 괄호 짝 맞추기 
   
   - stack 사용 
   
   https://school.programmers.co.kr/courses/11102/lessons/70714

4. 세 소수의 합 

  - combinations 사용 
  
  https://school.programmers.co.kr/courses/11102/lessons/70716
  
5. 올바른 괄호 

  - stack 사용
  
 https://school.programmers.co.kr/courses/11102/lessons/70675
 
6. 스킬트리 
 
  - for문 구현
  
  https://school.programmers.co.kr/courses/11102/lessons/70676
  
7. 최대 용량이 정해진 FIFO 큐 클래스 
  
    -for문으로 입력 값 받고 해당 함수를 구현 
    
   https://school.programmers.co.kr/courses/11102/lessons/70686
   
 8. 더 맵게 
   
      - heap 사용 
    
   https://school.programmers.co.kr/courses/11102/lessons/70689
    
9. 배상비용 최소화 
   
      -최대 heap 사용(q에 -로 값을 바꾸어 넣고, 꺼낼 때 다시 -붙여주기)
   
   https://school.programmers.co.kr/courses/11102/lessons/70690
   
10. 짝지어 제거하기 
   
      - 리스트 사용 
     
   https://school.programmers.co.kr/courses/11102/lessons/70703
   
11. 사전순 부분문자열 
   
      - 스택 사용 
      
    https://school.programmers.co.kr/courses/11102/lessons/70707
    
12. 주사위 게임 
    
        -product 사용 
        
    https://school.programmers.co.kr/courses/11102/lessons/70718
    
13. 문자열 압축 
    
        - for문 구현 
        
    https://school.programmers.co.kr/courses/11102/lessons/70685
    
14. 배달 
    
        - 다익스트라(graph, heapq) 사용
        
    https://school.programmers.co.kr/courses/11102/lessons/70677
    
15. FloodFill
    
        - bfs 사용 
        
   https://school.programmers.co.kr/courses/11102/lessons/70688
   
16. 방문 길이 
   
      - set사용 ( #좌표를 작은것, 큰것 순서로 저장하여 좌표 값[(x,y),(x',y')]=[(x',y'),(x,y)]이 같고 순서만 다를 때 중복되는 것을 방지 가능)
    
   https://school.programmers.co.kr/courses/11102/lessons/70705
   
17. 게임아이템 
      
       - for문 구현 (효율성 통과 못함), heapq 사용 
   
   https://school.programmers.co.kr/courses/11102/lessons/70691
   
18. 빙고 
  
      - 가로, 세로, 각 대각선 모두 하나의 리스트로 만들고 위치에 맞을때만 값 증가하여 최종 확인 
      
  https://school.programmers.co.kr/courses/11102/lessons/70704
      
19. N으로 표현 
   
        - set 사용, 4중 for문, 4가지 연산
        
    https://school.programmers.co.kr/courses/11102/lessons/70735
    
20. 2xn 타일 
      
        -DP 구현 
     
  https://school.programmers.co.kr/courses/11102/lessons/70736
 
 21. 등굣길 
 
 
 22. 가장 긴 팰린드롬 
 
 23. 자물쇠와 열쇠 
 
 24. 기둥과 보 설치
 
 25. 블록 이동하기 
 
    - bfs 사용, 각 좌표가 이동할 위치 확인 구현( 상-하, 좌-우)
    
  https://school.programmers.co.kr/courses/11102/lessons/70730
  
  =============
타겟 넘버 

from itertools import product

def solution(numbers, target):
    answer = 0
    
    l = [(x, -x) for x in numbers]   

    arr=list(map(sum, product(*l)))
    
===================
파일명 정리 
import re

def solution(files):
   
    answer=[re.split(r"([0-9]+)",s) for s in files]  #문자열 중간에 숫자가 있을 때 문자, 숫자 등 순서대로 분리 가능 

    tmp=sorted(answer,key=lambda x:(x[0].lower(),int(x[1])))
    
    return ["".join(s) for s in tmp]
       
    answer=arr.count(target)
    return answer
