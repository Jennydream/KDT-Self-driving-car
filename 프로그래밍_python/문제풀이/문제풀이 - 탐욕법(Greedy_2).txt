#알고리즘 
  -문제 : 큰 수 만들기 
  
  앞 자리에 큰 수가 오는 것이 전체를 크게 만듦 
  앞 자리에섭터 하나씩 골라서 담는다. 지금 담으려는 것보다 작은 값들은 다시 뺀다. 단! K만 큼만반복한다.

  
#시간 복잡도 : O(n)

#문제풀이 

어떤 숫자에서 k개의 수를 제거했을 때 얻을 수 있는 가장 큰 숫자를 구하려 합니다.

예를 들어, 숫자 1924에서 수 두 개를 제거하면 [19, 12, 14, 92, 94, 24] 를 만들 수 있습니다. 이 중 가장 큰 숫자는 94 입니다.

문자열 형식으로 숫자 number와 제거할 수의 개수 k가 solution 함수의 매개변수로 주어집니다. number에서 k 개의 수를 제거했을 때 만들 수 있는 수 중 가장 큰 숫자를 문자열 형태로 return 하도록 solution 함수를 완성하세요.

제한 조건
number는 1자리 이상, 1,000,000자리 이하인 숫자입니다.
k는 1 이상 number의 자릿수 미만인 자연수입니다.

def solution(number, k):
    answer = ''
    
    #숫자들을 담으면서 확인할 리스트 
    array=[]
    #각 숫자마다 순서를 지정하여 필요 위치를 확인
    for i, num in enumerate(number):
        #현재 확인하려는 리스트가 비어있지 않으면서 리스트의 맨 마지막 값이 이번 값보다 작으면 리스트에서 빼주기. k가 0보다 커야하며 뺄 때마다 k 1씩 감소
        while len(array)>0 and array[-1]<num and k>0:
            array.pop()
            k-=1
         # k가 0이 되면 아직 담지 못한 나머지 값들을 현재 위치(i)부터 연결하고 끝!
        if k==0:
            array+=list(number[i:])
            break
        #위의 두 조건이 다 안될 경우 그냥 담음
        array.append(num)
   
   #만약 k가 아직 0보다 크면 리스트에 담은 값에서 뒤에서부터 k만큼 제거   
    if k>0:
        array=array[:-k]
        
    #리스트 값을 문자열 값으로 변환
    answer=''.join(array)
    
    return answer